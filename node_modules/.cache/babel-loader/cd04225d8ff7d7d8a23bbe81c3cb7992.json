{"ast":null,"code":"var _jsxFileName = \"/home/levy/Downloads/FoodOrderApp/01-starting-project/src/Components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport { useContext, useState } from \"react\";\nimport CartItem from \"./CartItem\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [buttonClick, setButtonClick] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const submitOrderHandler = userData => {\n    fetch('https://react-http-2c5a0-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      amount: item.amount,\n      name: item.name,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n\n  const orderButtonClicked = () => {\n    setButtonClick(true);\n  };\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.onClose,\n      className: classes[\"button--alt\"],\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: orderButtonClicked,\n      className: classes.button,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), buttonClick && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, this), !buttonClick && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"JzlaqXToJ3xAXEJ/fuseuJpytEA=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/levy/Downloads/FoodOrderApp/01-starting-project/src/Components/Cart/Cart.js"],"names":["classes","Modal","useContext","useState","CartItem","CartContext","Checkout","Cart","props","buttonClick","setButtonClick","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","cartItems","map","name","price","bind","orderButtonClicked","modalActions","actions","onClose","button","total"],"mappings":"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","sourcesContent":["import classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport { useContext, useState } from \"react\";\nimport CartItem from \"./CartItem\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\n\nconst Cart = (props) => {\n  const [buttonClick, setButtonClick] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem({\n      ...item,\n      amount: 1,\n    });\n  };\n\n  const submitOrderHandler=(userData)=>{\n    fetch('https://react-http-2c5a0-default-rtdb.firebaseio.com/orders.json',{\n      method:'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    })\n\n  }\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          amount={item.amount}\n          name={item.name}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        ></CartItem>\n      ))}\n    </ul>\n  );\n\n  const orderButtonClicked = () => {\n    setButtonClick(true);\n  };\n\n  const modalActions =(\n    <div className={classes.actions}>\n          <button onClick={props.onClose} className={classes[\"button--alt\"]}>\n            Close\n          </button>\n          {hasItems && (\n            <button onClick={orderButtonClicked} className={classes.button}>\n              Order\n            </button>\n          )}\n        </div>\n  )\n\n  return (\n    <Modal onClose={props.onClose}>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      {buttonClick && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose}/>}\n      {!buttonClick && modalActions}\n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}