{"ast":null,"code":"var _jsxFileName = \"/home/levy/Downloads/FoodOrderApp/01-starting-project/src/Components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Checkout.module.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => {\n  return value.trim().length === \"\";\n};\n\nconst isFiveChars = value => {\n  return value.trim().length <= 5;\n};\n\nconst Checkout = props => {\n  _s();\n\n  const [formValidity, setFormValidity] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const nameIsValid = !isEmpty(nameInputRef);\n  const streetIsValid = !isEmpty(streetInputRef);\n  const postalIsValid = isFiveChars(postalInputRef);\n  const cityIsValid = !isEmpty(cityInputRef);\n  setFormValidity({\n    name: nameIsValid,\n    street: streetIsValid,\n    postal: postalIsValid,\n    city: cityIsValid\n  });\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const formIsValid = nameIsValid && streetIsValid && postalIsValid && cityIsValid;\n\n    if (!formIsValid) {\n      alert('Form is not valid');\n      return;\n    }\n\n    alert('Sucessful order');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Input your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        value: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), !formValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The name field is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), !formValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The street field is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), !formValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The postal code field is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"City\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"City\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), !formValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The city field is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"P7B1Sy7X0G2UtjuWuJzKT2t086s=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/home/levy/Downloads/FoodOrderApp/01-starting-project/src/Components/Cart/Checkout.js"],"names":["classes","useState","isEmpty","value","trim","length","isFiveChars","Checkout","props","formValidity","setFormValidity","name","street","postal","city","nameInputRef","useRef","streetInputRef","postalInputRef","cityInputRef","nameIsValid","streetIsValid","postalIsValid","cityIsValid","submitHandler","event","preventDefault","formIsValid","alert","control","nameInputHandler","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import classes from \"./Checkout.module.css\";\nimport { useState } from \"react\";\n\nconst isEmpty = (value) => {\n  return value.trim().length === \"\";\n};\n\nconst isFiveChars = (value) => {\n  return value.trim().length <= 5;\n};\n\nconst Checkout = (props) => {\n  const[formValidity, setFormValidity]=useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true\n  })\n\n  const nameInputRef= useRef()\n  const streetInputRef= useRef()\n  const postalInputRef= useRef()\n  const cityInputRef= useRef()\n \n\n  const nameIsValid = !isEmpty(nameInputRef);\n  const streetIsValid = !isEmpty(streetInputRef);\n  const postalIsValid = isFiveChars(postalInputRef);\n  const cityIsValid = !isEmpty(cityInputRef);\n\n  setFormValidity({\n    name: nameIsValid,\n    street: streetIsValid,\n    postal: postalIsValid,\n    city: cityIsValid\n  })\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const formIsValid= nameIsValid && streetIsValid && postalIsValid && cityIsValid\n\n    if(!formIsValid){\n      alert('Form is not valid')\n      return\n    }\n    alert('Sucessful order')\n\n    \n\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"name\">Input your name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputHandler}\n          value={nameInputRef}\n        ></input>\n        {!formValidity.name && <p>The name field is empty</p>}\n      </div>\n\n      <div className={classes.control}>\n        <label htmlFor=\"street\">Street</label>\n        <input\n          type=\"text\"\n          id=\"street\"\n          ref={streetInputRef}\n        ></input>\n        {!formValidity.street&& <p>The street field is empty</p>}\n      </div>\n\n      <div className={classes.control}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input\n          type=\"text\"\n          id=\"postal\"\n          \n          ref={postalInputRef}\n        ></input>\n         {!formValidity.postal && <p>The postal code field is empty</p>}\n      </div>\n\n      <div className={classes.control}>\n        <label htmlFor=\"City\">City</label>\n        <input\n          type=\"text\"\n          id=\"City\"\n          ref={cityInputRef}\n        ></input>\n         {!formValidity.city && <p>The city field is empty</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}